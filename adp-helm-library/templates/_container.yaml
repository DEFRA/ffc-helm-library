{{- define "adp-helm-library.container.tpl" -}}
{{- $requiredMsg := include "adp-helm-library.default-check-required-msg" . -}}
name: {{ required (printf $requiredMsg "name") .Values.name | quote }}
image: {{ required (printf $requiredMsg "image") .Values.image | quote }}
envFrom:
- configMapRef:
    name: {{ printf "%s-config" .Values.name | quote }}
- secretRef:
    name: {{ printf "%s-secret" .Values.name | quote }}
{{- if .Values.container.command }}
command:
  {{- toYaml .Values.container.command | nindent 12 }}
{{- end }}
{{- if .Values.container.args }}
args:
  {{- toYaml .Values.container.args | nindent 12 }}
{{- end }}
imagePullPolicy: {{ .Values.container.imagePullPolicy | default "Always" | quote }}
securityContext:
  readOnlyRootFilesystem: {{ .Values.container.readOnlyRootFilesystem | default true }}
  allowPrivilegeEscalation: {{ .Values.container.allowPrivilegeEscalation | default false }}
resources:
  {{ include "adp-helm-library.mem-cpu-tiers" $ }}
volumeMounts:
- mountPath: /tmp
  name: temp-dir
- name: custom-root-ca
  mountPath: /etc/ssl/certs/defra-egress-firewall-cert-01.crt
  subPath: defra-egress-firewall-cert-01.crt
  readOnly: true
{{- end -}}
{{- define "adp-helm-library.container" -}}
{{- println "" -}}
{{- include "adp-helm-library.util.merge" (append . "adp-helm-library.container.tpl") | indent 8 -}}
{{- end -}}
