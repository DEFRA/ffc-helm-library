{{- define "ffc-helm-library.container.tpl" -}}
{{- $requiredMsg := include "ffc-helm-library.default-check-required-msg" . -}}
name: {{ .Chart.Name | quote }}
image: {{ required (printf $requiredMsg "image") .Values.image | quote }}
envFrom:
{{- if .Values.containerConfigMap }}
- configMapRef:
    name: {{ .Chart.Name | quote }}
{{- end }}
{{- if .Values.containerSecret }}
- secretRef:
    name: {{ .Chart.Name | quote }}
{{- end }}
{{- if .Values.container.command }}
command:
  {{- toYaml .Values.container.command | nindent 12 }}
{{- end }}
{{- if .Values.container.args }}
args:
  {{- toYaml .Values.container.args | nindent 12 }}
{{- end }}
imagePullPolicy: {{ .Values.container.imagePullPolicy | default "Always" | quote }}
securityContext:
  readOnlyRootFilesystem: {{ .Values.container.readOnlyRootFilesystem | default true }}
  allowPrivilegeEscalation: {{ .Values.container.allowPrivilegeEscalation | default false }}
resources:
  {{- if .Values.container.resourceTier }}
  {{- if eq .Values.container.resourceTier "S" }}
  requests:
    memory: "100Mi"
    cpu: "100m"
  limits:
    memory: "100Mi"
  {{- else if eq .Values.container.resourceTier "M" }}
  requests:
    memory: "250Mi"
    cpu: "250m"
  limits:
    memory: "250Mi"
  {{- else if eq .Values.container.resourceTier "L" }}
  requests:
    memory: "500Mi"
    cpu: "500m"
  limits:
    memory: "500Mi"
  {{- else if eq .Values.container.resourceTier "XL" }}
  requests:
    memory: "1Gi"
    cpu: "1"
  limits:
    memory: "1Gi"
  {{- else }}
  requests:
    memory: "250Mi"
    cpu: "250m"
  limits:
    memory: "250Mi"
  {{- end }}
  {{- else }}
  requests:
    memory: {{ required (printf $requiredMsg "container.requestMemory") .Values.container.requestMemory | quote }}
    cpu: {{ required (printf $requiredMsg "container.requestCpu") .Values.container.requestCpu | quote }}
  limits:
    memory: {{ required (printf $requiredMsg "container.limitMemory") .Values.container.limitMemory | quote }}
    {{- if .Values.container.limitCpu }}
    cpu: {{ .Values.container.limitCpu | quote }}
    {{- end }}
  {{- end }}
{{- if .Values.container.port }}
ports:
- containerPort: {{ .Values.container.port }}
  name: http
  protocol: TCP
{{- end }}
volumeMounts:
- mountPath: /tmp
  name: temp-dir
{{- end -}}
{{- define "ffc-helm-library.container" -}}
{{- println "" -}}
{{- include "ffc-helm-library.util.merge" (append . "ffc-helm-library.container.tpl") | indent 8 -}}
{{- end -}}
