{{- define "ffc-helm-library.container.tpl" -}}
{{- $requiredMsg := include "ffc-helm-library.default-check-required-msg" . -}}
name: {{ required (printf $requiredMsg "name") .Values.name | quote }}
image: {{ required (printf $requiredMsg "image") .Values.image | quote }}
envFrom:
{{- if .Values.configMap }}
- configMapRef:
    name: {{ .Values.configMap.name }}
{{- end }}
{{- if .Values.secret }}
- secretRef:
    name: {{ .Values.secret.name }}
{{- end }}
{{- if .Values.container.command }}
command:
  {{- toYaml .Values.container.command | nindent 12 }}
{{- end }}
{{- if .Values.container.args }}
args:
  {{- toYaml .Values.container.args | nindent 12 }}
{{- end }}
imagePullPolicy: {{ required (printf $requiredMsg "container.imagePullPolicy") .Values.container.imagePullPolicy | quote }}
securityContext:
  readOnlyRootFilesystem: {{ required (printf $requiredMsg "container.readOnlyRootFilesystem") .Values.container.readOnlyRootFilesystem }}
  allowPrivilegeEscalation: {{ required (printf $requiredMsg "container.allowPrivilegeEscalation") .Values.container.allowPrivilegeEscalation }}
resources:
  requests:
    memory: {{ required (printf $requiredMsg "container.requestMemory") .Values.container.requestMemory | quote }}
    cpu: {{ required (printf $requiredMsg "container.requestCpu") .Values.container.requestCpu | quote }}
  limits:
    memory: {{ required (printf $requiredMsg "container.limitMemory") .Values.container.limitMemory | quote }}
    cpu: {{ required (printf $requiredMsg "container.limitCpu") .Values.container.limitCpu | quote }}
{{- end -}}
{{- define "ffc-helm-library.container" -}}
{{- println "" -}}
{{- include "ffc-helm-library.util.merge" (append . "ffc-helm-library.container.tpl") | indent 8 -}}
{{- end -}}
